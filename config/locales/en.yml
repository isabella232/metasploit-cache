en:
  activerecord:
    errors:
      models:
        metasploit/cache/auxiliary/instance:
          attributes:
            actions:
              too_short: "has too few actions (minimum is %{count} action)"
            contributions:
              too_short: "has too few contributions (minimum is %{count} contribution)"
            default_action:
              inclusion: "is not included in actions"
            licensable_licenses:
              too_short: "has too few licensable licenses (minimum is %{count} licensable license)"
        metasploit/cache/encoder/instance:
          attributes:
            architecturable_architectures:
              too_short: "has too few architecturable architectures (minimum is %{count} architecturable architecture)"
            contributions:
              too_short: "has too few contributions (minimum is %{count} contribution)"
            licensable_licenses:
              too_short: "has too few licensable licenses (minimum is %{count} licensable license)"
            platformable_platforms:
              too_short: "has too few platformable platforms (minimum is %{count} platformable platform)"
        metasploit/cache/exploit/instance:
          attributes:
            contributions:
              too_short: "has too few contributions (minimum is %{count} contribution)"
            default_exploit_target:
              inclusion: "is not included in exploit targets"
            exploit_targets:
              too_short: "has too few exploit targets (minimum is %{count} exploit target)"
            licensable_licenses:
              too_short: "has too few licensable licenses (minimum is %{count} licensable license)"
            referencable_references:
              too_short: "has too few referencable references (minimum is %{count} referencable references)"
        metasploit/cache/exploit/target:
          attributes:
            architecturable_architectures:
              too_short: "has too few architecturable architectures (minimum is %{count} architecturable architecture)"
            platformable_platforms:
              too_short: "has too few platformable platforms (minimum is %{count} platformable platform)"
        metasploit/cache/nop/instance:
          attributes:
            architecturable_architectures:
              too_short: "has too few architecturable architectures (minimum is %{count} architecturable architecture)"
            contributions:
              too_short: "has too few contributions (minimum is %{count} contribution)"
            licensable_licenses:
              too_short: "has too few licensable licenses (minimum is %{count} licensable license)"
            platformable_platforms:
              too_short: "has too few platformable platforms (minimum is %{count} platformable platform)"
        metasploit/cache/payload/single/instance:
          attributes:
            architecturable_architectures:
              too_short: "has too few architecturable architectures (minimum is %{count} architecturable architecture)"
            contributions:
              too_short: "has too few contributions (minimum is %{count} contribution)"
            licensable_licenses:
              too_short: "has too few licensable licenses (minimum is %{count} licensable license)"
            platformable_platforms:
              too_short: "has too few platformable platforms (minimum is %{count} platformable platform)"
              too_short: "has too few licensable licenses (minimum is %{count} licensable license)"
        metasploit/cache/payload/stage/instance:
          attributes:
            architecturable_architectures:
              too_short: "has too few architecturable architectures (minimum is %{count} architecturable architecture)"
            contributions:
              too_short: "has too few contributions (minimum is %{count} contribution)"
            licensable_licenses:
              too_short: "has too few licensable licenses (minimum is %{count} licensable license)"
            platformable_platforms:
              too_short: "has too few platformable platforms (minimum is %{count} platformable platform)"
              too_short: "has too few licensable licenses (minimum is %{count} licensable license)"
        metasploit/cache/payload/staged/class:
          incompatible_architectures:  "has incompatible architectures between its stage and stager"
          incompatible_platforms: "has incompatible platforms between its stage and stager"
        metasploit/cache/payload/stager/instance:
          attributes:
            architecturable_architectures:
              too_short: "has too few architecturable architectures (minimum is %{count} architecturable architecture)"
            contributions:
              too_short: "has too few contributions (minimum is %{count} contribution)"
            licensable_licenses:
              too_short: "has too few licensable licenses (minimum is %{count} licensable license)"
            platformable_platforms:
              too_short: "has too few platformable platforms (minimum is %{count} platformable platform)"
        metasploit/cache/post/instance:
          attributes:
            architecturable_architectures:
              too_short: "has too few architecturable architectures (minimum is %{count} architecturable architecture)"
            contributions:
              too_short: "has too few contributions (minimum is %{count} contribution)"
            default_action:
              inclusion: "is not included in actions"
            licensable_licenses:
              too_short: "has too few licensable licenses (minimum is %{count} licensable license)"
            platformable_platforms:
              too_short: "has too few platformable platforms (minimum is %{count} platformable platform)"

  metasploit:
    model:
      ancestors:
        metasploit/cache/architecture:
          search:
            operator:
              names:
                abbreviation:
                  help: "Abbreviation for architecture, such as x86, etc."
                bits:
                  help: "Number of bits supported by the architecture.  Certain architectures, such as those for programming languages like Ruby and PHP, do not have bits."
                endianness:
                  help: "Whether the architecture is big or little endian.  Certain architectures, such as those for programming languages like Ruby and PHP, do not have an endianness."
                family:
                  help: "The CPU architecture family.  For example x86_64 and x86 are both in the x86 family.  Certain architectures, such as those for programming languages like Ruby and PHP, do not have a family."

        metasploit/cache/author:
          search:
            operator:
              names:
                name:
                  help: "Full name (first + last name) or handle of the author."

        metasploit/cache/authority:
          search:
            operator:
              names:
                abbreviation:
                  help:  "Abbreviation or initialism for authority, such as CVE for 'Common Vulnerability and Exposures'."

        metasploit/cache/email_address:
          search:
            operator:
              names:
                domain:
                  help: "The domain part of the email address after the '@'."
                full:
                  help: "The full email address <local>@<domain>"
                local:
                  help: "The local part of the email address before the '@'."

        metasploit/cache/module/action:
          search:
            operator:
              names:
                name:
                  help: "The name of the module action."

        metasploit/cache/module/rank:
          search:
            operator:
              names:
                name:
                  help: "Name of the rank."
                number:
                  help: "Numerical value of the rank.  Higher numbers are better."

        metasploit/cache/module/target:
          search:
            operator:
              names:
                name:
                  help: "Name of module target."

        metasploit/cache/platform:
          search:
            operator:
              names:
                fully_qualified_name:
                  help: "Fully-qualified name of the platform."

        metasploit/cache/reference:
          search:
            operator:
              names:
                designation:
                  help: "A designation (usually a string of numbers and dashes) assigned by the reference's authority.  If the reference has no authority, then only url will be set, such as for references to proof-of-concept (PoC) blog posts."
                url:
                  help: "URL to web page with information about referenced exploit.  The URL may be null if the authority is obsolete."

      errors:
        messages:
          record_invalid: "Validation failed: %{errors}"
          # have to duplicate activerecord.model.errors.message.taken because of the different i18n_scope
          taken: "has already been taken"

        models:
          metasploit/cache/direct/class/load:
            attributes:
              metasploit_class:
                unusable: "is unusable on this local host"

          metasploit/cache/payload/direct/class/load:
            attributes:
              metasploit_class:
                unusable: "is unusable on this local host"

          metasploit/cache/search/operation/date:
            attributes:
              value:
                unparseable_date: "is not a parseable Date"

          metasploit/cache/search/operation/null:
            attributes:
              operator:
                type: "is not a %{type}"

          metasploit/cache/search/operation/set:
            attributes:
              value:
                inclusion: "is not part of the set (%{set})"

          metasploit/cache/search/operation/group/base:
            attributes:
              children:
                too_short: "is too short (minimum is %{count} child)"

          metasploit/cache/search/operator/null:
            attributes:
              name:
                unknown: "is unknown"

          metasploit/cache/search/query:
            attributes:
              operations:
                too_short: "is too short (minimum is %{count} operation)"

      search:
        operator:
          ancestors:
            metasploit/cache/search/operator/deprecated/authority:
              help: "Modules with reference from the %{name} authority.  Maps to `authorities.abbreviation:%{name} references.designation:<value>`."

