en:
  activerecord:
    errors:
      models:
        metasploit/cache/auxiliary/instance:
          attributes:
            actions:
              does_not_contain_default_action: "does not contain default action"
              too_short: "has too few actions (minimum is %{count} action)"
  metasploit:
    model:
      ancestors:
        metasploit/cache/architecture:
          search:
            operator:
              names:
                abbreviation:
                  help: "Abbreviation for architecture, such as x86, etc."
                bits:
                  help: "Number of bits supported by the architecture.  Certain architectures, such as those for programming languages like Ruby and PHP, do not have bits."
                endianness:
                  help: "Whether the architecture is big or little endian.  Certain architectures, such as those for programming languages like Ruby and PHP, do not have an endianness."
                family:
                  help: "The CPU architecture family.  For example x86_64 and x86 are both in the x86 family.  Certain architectures, such as those for programming languages like Ruby and PHP, do not have a family."

        metasploit/cache/author:
          search:
            operator:
              names:
                name:
                  help: "Full name (first + last name) or handle of the author."

        metasploit/cache/authority:
          search:
            operator:
              names:
                abbreviation:
                  help:  "Abbreviation or initialism for authority, such as CVE for 'Common Vulnerability and Exposures'."

        metasploit/cache/email_address:
          search:
            operator:
              names:
                domain:
                  help: "The domain part of the email address after the '@'."
                full:
                  help: "The full email address <local>@<domain>"
                local:
                  help: "The local part of the email address before the '@'."

        metasploit/cache/module/action:
          search:
            operator:
              names:
                name:
                  help: "The name of the module action."

        metasploit/cache/module/class:
          search:
            operator:
              names:
                full_name:
                  help: "<module_type>/<reference_name>"
                module_type:
                  help: "The type of this module."
                payload_type:
                  help: "For payload modules, the type of payload, either 'single' or 'staged'."
                reference_name:
                  help: "The reference name relative to the module_type."

        metasploit/cache/module/instance:
          search:
            operator:
              names:
                app:
                  help: "The type of application. either client or server, which maps to stance:passive or stance:aggressive, respectively."
                author:
                  help: "Either the author's name or email address.  Maps to authors.name, email_addresses.local, and/or email_addresses.domain."
                description:
                  help: "A long, paragraph description of what the module does."
                disclosed_on:
                  help: "The date the vulnerability exploited by this module was disclosed to the public."
                license:
                  help: "The name of the software license for the module's code."
                name:
                  help: "The human readable name of the module.  It can be thought of as the summary or title of the module."
                os:
                  help: "Module OS in platforms.name or targets.name."
                platform:
                  help: "Module platform in platforms.name or targets.name."
                privileged:
                  help: "Whether the module requires privileged access to run."
                ref:
                  help: "Reference to module using obsolete \"<context>-<id>\" syntax, which maps to the newer authorities.abbreviation, references.designation or references.url."
                stance:
                  help: "Whether the module is active or passive."
                text:
                  help: "Search most of the text fields of the module metadata.  Maps to description, name, actions.name, architectures.abbreviation, platform, or ref."

        metasploit/cache/module/rank:
          search:
            operator:
              names:
                name:
                  help: "Name of the rank."
                number:
                  help: "Numerical value of the rank.  Higher numbers are better."

        metasploit/cache/module/target:
          search:
            operator:
              names:
                name:
                  help: "Name of module target."

        metasploit/cache/platform:
          search:
            operator:
              names:
                fully_qualified_name:
                  help: "Fully-qualified name of the platform."

        metasploit/cache/reference:
          search:
            operator:
              names:
                designation:
                  help: "A designation (usually a string of numbers and dashes) assigned by the reference's authority.  If the reference has no authority, then only url will be set, such as for references to proof-of-concept (PoC) blog posts."
                url:
                  help: "URL to web page with information about referenced exploit.  The URL may be null if the authority is obsolete."

      attributes:
        metasploit/cache/module/instance:
          actions:
            one: 'action'
            other: 'actions'
          module_authors:
            one: 'module author'
            other: 'module authors'
          module_references:
            one: 'module reference'
            other: 'module references'
          targets:
            one: 'target'
            other: 'targets'

      errors:
        messages:
          # have to duplicate activerecord.model.errors.message.taken because of the different i18n_scope
          taken: "has already been taken"

        models:
          metasploit/cache/direct/class/load:
            attributes:
              metasploit_class:
                unusable: "is unusable on this local host"

          metasploit/cache/module/instance:
            attributes:
              actions:
                wrong_length: "cannot have any actions"

              architectures:
                extra: "has extra architectures (%{extra}) not found on targets"
                missing: "is missing architectures (%{missing}) from targets"

              module_architectures:
                too_short: "is too short (minimum is %{count} module architectures)"
                wrong_length: "cannot have any module architectures"

              module_platforms:
                too_short: "is too short (minimum is %{count} module platforms)"
                wrong_length: "cannot have any module platforms"

              module_references:
                too_short: "is too short (minimum is %{count} module references)"
                wrong_length: "cannot have any module references"

              platforms:
                extra: "has extra platforms (%{extra}) not found on targets"
                missing: "is missing platforms (%{missing}) from targets"

              targets:
                too_short: "is too short (minimum is %{count} targets)"
                wrong_length: "cannot have any targets"

          metasploit/cache/search/operation/date:
            attributes:
              value:
                unparseable_date: "is not a parseable Date"

          metasploit/cache/search/operation/null:
            attributes:
              operator:
                type: "is not a %{type}"

          metasploit/cache/search/operation/set:
            attributes:
              value:
                inclusion: "is not part of the set (%{set})"

          metasploit/cache/search/operation/group/base:
            attributes:
              children:
                too_short: "is too short (minimum is %{count} child)"

          metasploit/cache/search/operator/null:
            attributes:
              name:
                unknown: "is unknown"

          metasploit/cache/search/query:
            attributes:
              operations:
                too_short: "is too short (minimum is %{count} operation)"

      search:
        operator:
          ancestors:
            metasploit/cache/search/operator/deprecated/authority:
              help: "Modules with reference from the %{name} authority.  Maps to `authorities.abbreviation:%{name} references.designation:<value>`."

