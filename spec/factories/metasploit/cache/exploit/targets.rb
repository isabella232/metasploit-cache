FactoryGirl.define do
  factory :metasploit_cache_exploit_target,
          class: Metasploit::Cache::Exploit::Target do
    transient do
      architecturable_architecture_count 1
      platformable_platform_count 1
    end

    index { generate :metasploit_cache_exploit_target_index }
    name { generate :metasploit_cache_exploit_target_name }

    #
    # Associations
    #

    association :exploit_instance, factory: :metasploit_cache_exploit_instance

    #
    # Callbacks
    #

    after(:build) do |exploit_target, evaluator|
      exploit_target.architecturable_architectures = build_list(
          :metasploit_cache_exploit_target_architecture,
          evaluator.architecturable_architecture_count,
          architecturable: exploit_target
      )

      exploit_target.platformable_platforms = build_list(
          :metasploit_cache_exploit_target_platform,
          evaluator.platformable_platform_count,
          platformable: exploit_target
      )
    end
  end

  sequence :metasploit_cache_exploit_target_index do |n|
    n
  end

  sequence :metasploit_cache_exploit_target_name do |n|
    "Metasploit::Cache::Exploit::Target#name #{n}"
  end
end