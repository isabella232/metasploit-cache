# Target of an {Metasploit::Cache::Exploit::Instance exploit Metasploit Module}.  Targets have specific architectures
# and platforms that customize the behavior of the exploit Metasploit Module.
class Metasploit::Cache::Exploit::Target < ActiveRecord::Base
  #
  #
  # Associations
  #
  #

  # Joins {#architectures} to this target.
  has_many :architecturable_architectures,
           as: :architecturable,
           class_name: 'Metasploit::Cache::Architecturable::Architecture',
           dependent: :destroy,
           inverse_of: :architecturable

  # {Metasploit::Cache::Exploit::Instance Exploit Metasploit Module} on which this is a target.
  belongs_to :exploit_instance,
             class_name: 'Metasploit::Cache::Exploit::Instance',
             inverse_of: :exploit_targets

  # Joins {#platforms} to this exploit Metasploit Module target.
  has_many :platformable_platforms,
           as: :platformable,
           class_name: 'Metasploit::Cache::Platformable::Platform',
           dependent: :destroy,
           inverse_of: :platformable

  #
  # through: :platformable_platform
  #

  has_many :platforms,
           class_name: 'Metasploit::Cache::Platform',
           through: :platformable_platform

  #
  # through: :architecturable_architectures
  #

  # The architectures targeted by this target.
  has_many :architectures,
           class_name: 'Metasploit::Cache::Architecture',
           through: :architecturable_architectures

  #
  # Attributes
  #

  # @!attribute index
  #   @note Does not imply that this is the index of this target in
  #     {Metasploit::Cache::Exploit::Instance#exploit_targets}.
  #
  #   The index of this target in the array of targets as declared on the {#exploit_instance exploit Metasploit Module}
  #   source.
  #
  #   @return [Integer]

  # @!attribute name
  #   The name of this target.
  #
  #   @return [String]

  #
  # Validations
  #

  validates :architecturable_architectures,
            length: {
                minimum: 1
            }
  validates :exploit_instance,
            presence: true
  validates :index,
            presence: true,
            uniqueness: {
                scope: :exploit_instance_id
            }
  validates :name,
            presence: true,
            uniqueness: {
                scope: :exploit_instance_id
            }
  validates :platformable_platforms,
            length: {
                minimum: 1
            }

  Metasploit::Concern.run(self)
end